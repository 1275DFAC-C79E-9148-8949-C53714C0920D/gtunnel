// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gTunnel.proto

package gtunnel

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d410756becea25d, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type EndpointControlMessage struct {
	Operation            int32    `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	EndpointID           string   `protobuf:"bytes,2,opt,name=endpointID,proto3" json:"endpointID,omitempty"`
	TunnelID             string   `protobuf:"bytes,3,opt,name=tunnelID,proto3" json:"tunnelID,omitempty"`
	ErrorStatus          int32    `protobuf:"varint,4,opt,name=errorStatus,proto3" json:"errorStatus,omitempty"`
	LocalIp              uint32   `protobuf:"varint,5,opt,name=localIp,proto3" json:"localIp,omitempty"`
	LocalPort            uint32   `protobuf:"varint,6,opt,name=localPort,proto3" json:"localPort,omitempty"`
	RemoteIP             uint32   `protobuf:"varint,7,opt,name=remoteIP,proto3" json:"remoteIP,omitempty"`
	RemotePort           uint32   `protobuf:"varint,8,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointControlMessage) Reset()         { *m = EndpointControlMessage{} }
func (m *EndpointControlMessage) String() string { return proto.CompactTextString(m) }
func (*EndpointControlMessage) ProtoMessage()    {}
func (*EndpointControlMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d410756becea25d, []int{1}
}

func (m *EndpointControlMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointControlMessage.Unmarshal(m, b)
}
func (m *EndpointControlMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointControlMessage.Marshal(b, m, deterministic)
}
func (m *EndpointControlMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointControlMessage.Merge(m, src)
}
func (m *EndpointControlMessage) XXX_Size() int {
	return xxx_messageInfo_EndpointControlMessage.Size(m)
}
func (m *EndpointControlMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointControlMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointControlMessage proto.InternalMessageInfo

func (m *EndpointControlMessage) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *EndpointControlMessage) GetEndpointID() string {
	if m != nil {
		return m.EndpointID
	}
	return ""
}

func (m *EndpointControlMessage) GetTunnelID() string {
	if m != nil {
		return m.TunnelID
	}
	return ""
}

func (m *EndpointControlMessage) GetErrorStatus() int32 {
	if m != nil {
		return m.ErrorStatus
	}
	return 0
}

func (m *EndpointControlMessage) GetLocalIp() uint32 {
	if m != nil {
		return m.LocalIp
	}
	return 0
}

func (m *EndpointControlMessage) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *EndpointControlMessage) GetRemoteIP() uint32 {
	if m != nil {
		return m.RemoteIP
	}
	return 0
}

func (m *EndpointControlMessage) GetRemotePort() uint32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

type TunnelControlMessage struct {
	Operation            int32    `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	ErrorStatus          int32    `protobuf:"varint,2,opt,name=errorStatus,proto3" json:"errorStatus,omitempty"`
	EndpointID           string   `protobuf:"bytes,3,opt,name=endpointID,proto3" json:"endpointID,omitempty"`
	TunnelID             string   `protobuf:"bytes,4,opt,name=tunnelID,proto3" json:"tunnelID,omitempty"`
	ConnectionID         int32    `protobuf:"varint,5,opt,name=connectionID,proto3" json:"connectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TunnelControlMessage) Reset()         { *m = TunnelControlMessage{} }
func (m *TunnelControlMessage) String() string { return proto.CompactTextString(m) }
func (*TunnelControlMessage) ProtoMessage()    {}
func (*TunnelControlMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d410756becea25d, []int{2}
}

func (m *TunnelControlMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelControlMessage.Unmarshal(m, b)
}
func (m *TunnelControlMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelControlMessage.Marshal(b, m, deterministic)
}
func (m *TunnelControlMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelControlMessage.Merge(m, src)
}
func (m *TunnelControlMessage) XXX_Size() int {
	return xxx_messageInfo_TunnelControlMessage.Size(m)
}
func (m *TunnelControlMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelControlMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelControlMessage proto.InternalMessageInfo

func (m *TunnelControlMessage) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *TunnelControlMessage) GetErrorStatus() int32 {
	if m != nil {
		return m.ErrorStatus
	}
	return 0
}

func (m *TunnelControlMessage) GetEndpointID() string {
	if m != nil {
		return m.EndpointID
	}
	return ""
}

func (m *TunnelControlMessage) GetTunnelID() string {
	if m != nil {
		return m.TunnelID
	}
	return ""
}

func (m *TunnelControlMessage) GetConnectionID() int32 {
	if m != nil {
		return m.ConnectionID
	}
	return 0
}

type BytesMessage struct {
	EndpointID           string   `protobuf:"bytes,1,opt,name=endpointID,proto3" json:"endpointID,omitempty"`
	TunnelID             string   `protobuf:"bytes,2,opt,name=tunnelID,proto3" json:"tunnelID,omitempty"`
	ConnectionID         int32    `protobuf:"varint,3,opt,name=connectionID,proto3" json:"connectionID,omitempty"`
	Content              []byte   `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BytesMessage) Reset()         { *m = BytesMessage{} }
func (m *BytesMessage) String() string { return proto.CompactTextString(m) }
func (*BytesMessage) ProtoMessage()    {}
func (*BytesMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d410756becea25d, []int{3}
}

func (m *BytesMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BytesMessage.Unmarshal(m, b)
}
func (m *BytesMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BytesMessage.Marshal(b, m, deterministic)
}
func (m *BytesMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BytesMessage.Merge(m, src)
}
func (m *BytesMessage) XXX_Size() int {
	return xxx_messageInfo_BytesMessage.Size(m)
}
func (m *BytesMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BytesMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BytesMessage proto.InternalMessageInfo

func (m *BytesMessage) GetEndpointID() string {
	if m != nil {
		return m.EndpointID
	}
	return ""
}

func (m *BytesMessage) GetTunnelID() string {
	if m != nil {
		return m.TunnelID
	}
	return ""
}

func (m *BytesMessage) GetConnectionID() int32 {
	if m != nil {
		return m.ConnectionID
	}
	return 0
}

func (m *BytesMessage) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "gtunnel.empty")
	proto.RegisterType((*EndpointControlMessage)(nil), "gtunnel.EndpointControlMessage")
	proto.RegisterType((*TunnelControlMessage)(nil), "gtunnel.TunnelControlMessage")
	proto.RegisterType((*BytesMessage)(nil), "gtunnel.BytesMessage")
}

func init() {
	proto.RegisterFile("gTunnel.proto", fileDescriptor_3d410756becea25d)
}

var fileDescriptor_3d410756becea25d = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x4d, 0x6e, 0xea, 0x30,
	0x10, 0xc7, 0x71, 0x20, 0x04, 0xe6, 0xc1, 0xc6, 0xe2, 0x21, 0xbf, 0xbc, 0xaf, 0x28, 0xab, 0xac,
	0x10, 0x6a, 0x6f, 0x00, 0x54, 0x55, 0xa4, 0x56, 0x42, 0xa1, 0xfb, 0x2a, 0x4d, 0x47, 0x08, 0x29,
	0xd8, 0x91, 0x63, 0x16, 0xdc, 0x80, 0x4b, 0xf4, 0x1a, 0x3d, 0x5f, 0x15, 0xe7, 0x83, 0x04, 0x10,
	0xa8, 0xbb, 0xcc, 0x7f, 0xe2, 0xf9, 0x8f, 0x7f, 0x33, 0x86, 0xe1, 0xfa, 0x65, 0xc7, 0x39, 0xc6,
	0x93, 0x44, 0x0a, 0x25, 0xa8, 0xb5, 0x56, 0x3a, 0x74, 0x2d, 0x30, 0x71, 0x9b, 0xa8, 0xbd, 0x7b,
	0x30, 0x60, 0xfc, 0xc0, 0xdf, 0x13, 0xb1, 0xe1, 0x6a, 0x2e, 0xb8, 0x92, 0x22, 0x7e, 0xc6, 0x34,
	0x0d, 0xd7, 0x48, 0xff, 0x40, 0x5f, 0x24, 0x28, 0x43, 0xb5, 0x11, 0x9c, 0x11, 0x87, 0x78, 0x66,
	0x70, 0x14, 0xe8, 0x3f, 0x00, 0x2c, 0xce, 0xf9, 0x0b, 0x66, 0x38, 0xc4, 0xeb, 0x07, 0x35, 0x85,
	0xda, 0xd0, 0xcb, 0xbd, 0xfc, 0x05, 0x6b, 0xeb, 0x6c, 0x15, 0x53, 0x07, 0x7e, 0xa0, 0x94, 0x42,
	0xae, 0x54, 0xa8, 0x76, 0x29, 0xeb, 0xe8, 0xda, 0x75, 0x89, 0x32, 0xb0, 0x62, 0x11, 0x85, 0xb1,
	0x9f, 0x30, 0xd3, 0x21, 0xde, 0x30, 0x28, 0xc3, 0xac, 0x2b, 0xfd, 0xb9, 0x14, 0x52, 0xb1, 0xae,
	0xce, 0x1d, 0x85, 0xcc, 0x55, 0xe2, 0x56, 0x28, 0xf4, 0x97, 0xcc, 0xd2, 0xc9, 0x2a, 0xce, 0x3a,
	0xce, 0xbf, 0xf5, 0xd1, 0x9e, 0xce, 0xd6, 0x14, 0xf7, 0x93, 0xc0, 0x28, 0xa7, 0xf5, 0x2d, 0x10,
	0x27, 0x97, 0x31, 0xce, 0x2f, 0xd3, 0x44, 0xd5, 0xbe, 0x8a, 0xaa, 0x73, 0x82, 0xca, 0x85, 0x41,
	0x24, 0x38, 0xc7, 0x28, 0xf3, 0xf2, 0x17, 0x9a, 0x86, 0x19, 0x34, 0x34, 0xf7, 0x40, 0x60, 0x30,
	0xdb, 0x2b, 0x4c, 0xcb, 0x86, 0x9b, 0x86, 0xe4, 0xaa, 0xa1, 0x71, 0xc3, 0xb0, 0x7d, 0x6e, 0x98,
	0x4d, 0x27, 0x43, 0x84, 0x5c, 0xe9, 0x7e, 0x07, 0x41, 0x19, 0xde, 0x7d, 0x18, 0x60, 0x3d, 0xe6,
	0x10, 0x69, 0x04, 0xbf, 0xe7, 0x12, 0x43, 0x85, 0x27, 0xfb, 0xb5, 0x52, 0x12, 0xc3, 0x2d, 0xfd,
	0x3f, 0x29, 0x96, 0x71, 0x72, 0x79, 0xff, 0xec, 0x5b, 0x3f, 0xb8, 0xad, 0x29, 0xa1, 0xaf, 0xf0,
	0x2b, 0x37, 0x69, 0x4c, 0xae, 0xb0, 0xf8, 0x5b, 0x55, 0xb8, 0x34, 0x57, 0xfb, 0x7a, 0xda, 0x6d,
	0x79, 0x64, 0x4a, 0xe8, 0x13, 0x8c, 0x73, 0x83, 0x79, 0x45, 0xa0, 0xa8, 0xfe, 0xb3, 0x3a, 0x5e,
	0x87, 0x6f, 0x5f, 0x96, 0xf3, 0x6a, 0xb3, 0x11, 0x94, 0x4f, 0x70, 0x56, 0x72, 0x5a, 0x92, 0xb7,
	0xae, 0x7e, 0x9d, 0xf7, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0xac, 0xdc, 0x7b, 0xae, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GTunnelClient is the client API for GTunnel service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GTunnelClient interface {
	// Gets a stream of control messages from the server
	CreateEndpointControlStream(ctx context.Context, in *EndpointControlMessage, opts ...grpc.CallOption) (GTunnel_CreateEndpointControlStreamClient, error)
	CreateTunnelControlStream(ctx context.Context, opts ...grpc.CallOption) (GTunnel_CreateTunnelControlStreamClient, error)
	// Bidirectional stream for data
	CreateConnectionStream(ctx context.Context, opts ...grpc.CallOption) (GTunnel_CreateConnectionStreamClient, error)
}

type gTunnelClient struct {
	cc grpc.ClientConnInterface
}

func NewGTunnelClient(cc grpc.ClientConnInterface) GTunnelClient {
	return &gTunnelClient{cc}
}

func (c *gTunnelClient) CreateEndpointControlStream(ctx context.Context, in *EndpointControlMessage, opts ...grpc.CallOption) (GTunnel_CreateEndpointControlStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GTunnel_serviceDesc.Streams[0], "/gtunnel.GTunnel/CreateEndpointControlStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gTunnelCreateEndpointControlStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GTunnel_CreateEndpointControlStreamClient interface {
	Recv() (*EndpointControlMessage, error)
	grpc.ClientStream
}

type gTunnelCreateEndpointControlStreamClient struct {
	grpc.ClientStream
}

func (x *gTunnelCreateEndpointControlStreamClient) Recv() (*EndpointControlMessage, error) {
	m := new(EndpointControlMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gTunnelClient) CreateTunnelControlStream(ctx context.Context, opts ...grpc.CallOption) (GTunnel_CreateTunnelControlStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GTunnel_serviceDesc.Streams[1], "/gtunnel.GTunnel/CreateTunnelControlStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gTunnelCreateTunnelControlStreamClient{stream}
	return x, nil
}

type GTunnel_CreateTunnelControlStreamClient interface {
	Send(*TunnelControlMessage) error
	Recv() (*TunnelControlMessage, error)
	grpc.ClientStream
}

type gTunnelCreateTunnelControlStreamClient struct {
	grpc.ClientStream
}

func (x *gTunnelCreateTunnelControlStreamClient) Send(m *TunnelControlMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gTunnelCreateTunnelControlStreamClient) Recv() (*TunnelControlMessage, error) {
	m := new(TunnelControlMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gTunnelClient) CreateConnectionStream(ctx context.Context, opts ...grpc.CallOption) (GTunnel_CreateConnectionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GTunnel_serviceDesc.Streams[2], "/gtunnel.GTunnel/CreateConnectionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gTunnelCreateConnectionStreamClient{stream}
	return x, nil
}

type GTunnel_CreateConnectionStreamClient interface {
	Send(*BytesMessage) error
	Recv() (*BytesMessage, error)
	grpc.ClientStream
}

type gTunnelCreateConnectionStreamClient struct {
	grpc.ClientStream
}

func (x *gTunnelCreateConnectionStreamClient) Send(m *BytesMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gTunnelCreateConnectionStreamClient) Recv() (*BytesMessage, error) {
	m := new(BytesMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GTunnelServer is the server API for GTunnel service.
type GTunnelServer interface {
	// Gets a stream of control messages from the server
	CreateEndpointControlStream(*EndpointControlMessage, GTunnel_CreateEndpointControlStreamServer) error
	CreateTunnelControlStream(GTunnel_CreateTunnelControlStreamServer) error
	// Bidirectional stream for data
	CreateConnectionStream(GTunnel_CreateConnectionStreamServer) error
}

// UnimplementedGTunnelServer can be embedded to have forward compatible implementations.
type UnimplementedGTunnelServer struct {
}

func (*UnimplementedGTunnelServer) CreateEndpointControlStream(req *EndpointControlMessage, srv GTunnel_CreateEndpointControlStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateEndpointControlStream not implemented")
}
func (*UnimplementedGTunnelServer) CreateTunnelControlStream(srv GTunnel_CreateTunnelControlStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateTunnelControlStream not implemented")
}
func (*UnimplementedGTunnelServer) CreateConnectionStream(srv GTunnel_CreateConnectionStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateConnectionStream not implemented")
}

func RegisterGTunnelServer(s *grpc.Server, srv GTunnelServer) {
	s.RegisterService(&_GTunnel_serviceDesc, srv)
}

func _GTunnel_CreateEndpointControlStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EndpointControlMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GTunnelServer).CreateEndpointControlStream(m, &gTunnelCreateEndpointControlStreamServer{stream})
}

type GTunnel_CreateEndpointControlStreamServer interface {
	Send(*EndpointControlMessage) error
	grpc.ServerStream
}

type gTunnelCreateEndpointControlStreamServer struct {
	grpc.ServerStream
}

func (x *gTunnelCreateEndpointControlStreamServer) Send(m *EndpointControlMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _GTunnel_CreateTunnelControlStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GTunnelServer).CreateTunnelControlStream(&gTunnelCreateTunnelControlStreamServer{stream})
}

type GTunnel_CreateTunnelControlStreamServer interface {
	Send(*TunnelControlMessage) error
	Recv() (*TunnelControlMessage, error)
	grpc.ServerStream
}

type gTunnelCreateTunnelControlStreamServer struct {
	grpc.ServerStream
}

func (x *gTunnelCreateTunnelControlStreamServer) Send(m *TunnelControlMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gTunnelCreateTunnelControlStreamServer) Recv() (*TunnelControlMessage, error) {
	m := new(TunnelControlMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GTunnel_CreateConnectionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GTunnelServer).CreateConnectionStream(&gTunnelCreateConnectionStreamServer{stream})
}

type GTunnel_CreateConnectionStreamServer interface {
	Send(*BytesMessage) error
	Recv() (*BytesMessage, error)
	grpc.ServerStream
}

type gTunnelCreateConnectionStreamServer struct {
	grpc.ServerStream
}

func (x *gTunnelCreateConnectionStreamServer) Send(m *BytesMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gTunnelCreateConnectionStreamServer) Recv() (*BytesMessage, error) {
	m := new(BytesMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GTunnel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gtunnel.GTunnel",
	HandlerType: (*GTunnelServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateEndpointControlStream",
			Handler:       _GTunnel_CreateEndpointControlStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateTunnelControlStream",
			Handler:       _GTunnel_CreateTunnelControlStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "CreateConnectionStream",
			Handler:       _GTunnel_CreateConnectionStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gTunnel.proto",
}
